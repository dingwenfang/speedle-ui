{"remainingRequest":"/home/cyding/speedle-ui/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/cyding/speedle-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cyding/speedle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cyding/speedle-ui/src/components/NewPolicy.vue?vue&type=template&id=65bab1f2&","dependencies":[{"path":"/home/cyding/speedle-ui/src/components/NewPolicy.vue","mtime":1594813690944},{"path":"/home/cyding/speedle-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cyding/speedle-ui/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/cyding/speedle-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cyding/speedle-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}