{"remainingRequest":"/home/cyding/speedle-ui/node_modules/babel-loader/lib/index.js!/home/cyding/speedle-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cyding/speedle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cyding/speedle-ui/src/components/Policies.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cyding/speedle-ui/src/components/Policies.vue","mtime":1596336694976},{"path":"/home/cyding/speedle-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cyding/speedle-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/cyding/speedle-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cyding/speedle-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IE5ld1BvbGljeSBmcm9tICcuL05ld1BvbGljeS52dWUnOwppbXBvcnQgUG9saWN5VGFibGUgZnJvbSAnLi9Qb2xpY3lUYWJsZS52dWUnOwppbXBvcnQgTmV3Um9sZVBvbGljeSBmcm9tICcuL05ld1JvbGVQb2xpY3kudnVlJzsKaW1wb3J0IFJvbGVQb2xpY3lUYWJsZSBmcm9tICcuL1JvbGVQb2xpY3lUYWJsZS52dWUnOyAvLyBsZXQgbmV4dElEID0gMzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUG9saWNpZXMnLAogIGNvbXBvbmVudHM6IHsKICAgIE5ld1BvbGljeTogTmV3UG9saWN5LAogICAgUG9saWN5VGFibGU6IFBvbGljeVRhYmxlLAogICAgTmV3Um9sZVBvbGljeTogTmV3Um9sZVBvbGljeSwKICAgIFJvbGVQb2xpY3lUYWJsZTogUm9sZVBvbGljeVRhYmxlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9saWNpZXM6IFtdLAogICAgICByb2xlUG9saWNpZXM6IFtdLAogICAgICBuZXdQb2xpY3k6IHsKICAgICAgICBlZmZlY3Q6ICcnLAogICAgICAgIHByaW5jaXBhbHM6IFtdLAogICAgICAgIHBlcm1pc3Npb25zOiBbXSwKICAgICAgICBjb25kaXRpb246ICcnCiAgICAgIH0sCiAgICAgIG5ld1BvbGljeUFuZFByaW5jaXBhbDogW3sKICAgICAgICBpZDogMCwKICAgICAgICB0eXBlOiAnJywKICAgICAgICBuYW1lOiAnJwogICAgICB9XSwKICAgICAgbmV3UG9saWN5UGVybWlzc2lvbjogewogICAgICAgIGFjdGlvbjogJycsCiAgICAgICAgcmVzb3VyY2U6ICcnCiAgICAgIH0sCiAgICAgIG5ld1BvbGljeVZpc2libGU6IGZhbHNlLAogICAgICBuZXdSb2xlUG9saWN5OiB7CiAgICAgICAgZWZmZWN0OiAnJywKICAgICAgICBwcmluY2lwYWxzOiBbXSwKICAgICAgICByb2xlczogW10sCiAgICAgICAgcmVzb3VyY2VzOiBbXSwKICAgICAgICBjb25kaXRpb246ICcnCiAgICAgIH0sCiAgICAgIG5ld1JvbGVQb2xpY3lWaXNpYmxlOiBmYWxzZSwKICAgICAgbmV3Um9sZVBvbGljeVByaW5jaXBhbDogewogICAgICAgIHR5cGU6ICcnLAogICAgICAgIG5hbWU6ICcnCiAgICAgIH0sCiAgICAgIG5ld1JvbGVQb2xpY3lSb2xlOiAnJywKICAgICAgbmV3Um9sZVBvbGljeVJlc291cmNlOiAnJwogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBzdmNOYW1lOiBmdW5jdGlvbiBzdmNOYW1lKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuc3ZjTmFtZTsKICAgIH0sCiAgICBwbXNFbmRwb2ludDogZnVuY3Rpb24gcG1zRW5kcG9pbnQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5wbXNFbmRwb2ludDsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBzdmNOYW1lOiBmdW5jdGlvbiBzdmNOYW1lKG5ld1ZhbCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKG5ld1ZhbCAhPT0gJycpIHsKICAgICAgICB0aGlzLnJlc2V0TmV3UG9saWN5RGF0YSgpOwogICAgICAgIHRoaXMuYXhpb3MuZ2V0KCIiLmNvbmNhdCh0aGlzLnBtc0VuZHBvaW50LCAiL3NlcnZpY2UvIikuY29uY2F0KG5ld1ZhbCwgIi9wb2xpY3kiKSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgX3RoaXMucG9saWNpZXMgPSByZXNwb25zZS5kYXRhOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIucmVzcG9uc2Uuc3RhdHVzKTsKICAgICAgICAgIF90aGlzLnBvbGljaWVzID0gW107CgogICAgICAgICAgX3RoaXMuJGJ2VG9hc3QudG9hc3QoJ0ZhaWwgdG8gZ2V0IHBvbGljaWVzJywgewogICAgICAgICAgICB0aXRsZTogIiIuY29uY2F0KGVyci5yZXNwb25zZS5zdGF0dXMpLAogICAgICAgICAgICB2YXJpYW50OiAnZGFuZ2VyJywKICAgICAgICAgICAgc29saWQ6IHRydWUKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICAgIHRoaXMuYXhpb3MuZ2V0KCIiLmNvbmNhdCh0aGlzLnBtc0VuZHBvaW50LCAiL3NlcnZpY2UvIikuY29uY2F0KG5ld1ZhbCwgIi9yb2xlLXBvbGljeSIpKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICBfdGhpcy5yb2xlUG9saWNpZXMgPSByZXNwb25zZS5kYXRhOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIucmVzcG9uc2Uuc3RhdHVzKTsKICAgICAgICAgIF90aGlzLnJvbGVQb2xpY2llcyA9IFtdOwoKICAgICAgICAgIF90aGlzLiRidlRvYXN0LnRvYXN0KCdGYWlsIHRvIGdldCByb2xlIHBvbGljaWVzJywgewogICAgICAgICAgICB0aXRsZTogIiIuY29uY2F0KGVyci5yZXNwb25zZS5zdGF0dXMpLAogICAgICAgICAgICB2YXJpYW50OiAnZGFuZ2VyJywKICAgICAgICAgICAgc29saWQ6IHRydWUKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMucG9saWNpZXMgPSBbXTsKICAgICAgICB0aGlzLnJvbGVQb2xpY2llcyA9IFtdOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICByZXNldE5ld1BvbGljeURhdGE6IGZ1bmN0aW9uIHJlc2V0TmV3UG9saWN5RGF0YSgpIHsKICAgICAgdGhpcy5uZXdQb2xpY3kgPSB7CiAgICAgICAgZWZmZWN0OiAnJywKICAgICAgICBwcmluY2lwYWxzOiBbXSwKICAgICAgICBwZXJtaXNzaW9uczogW10sCiAgICAgICAgY29uZGl0aW9uOiAnJwogICAgICB9OwogICAgICB0aGlzLm5ld1BvbGljeVByaW5jaXBhbCA9IFt7CiAgICAgICAgaWQ6IDAsCiAgICAgICAgdHlwZTogJycsCiAgICAgICAgbmFtZTogJycKICAgICAgfV07CiAgICAgIHRoaXMubmV3UG9saWN5UGVybWlzc2lvbiA9IHsKICAgICAgICBhY3Rpb246ICcnLAogICAgICAgIHJlc291cmNlOiAnJywKICAgICAgICBpc1Jlc0V4cDogZmFsc2UKICAgICAgfTsKICAgICAgdGhpcy5uZXdQb2xpY3lWaXNpYmxlID0gZmFsc2U7CiAgICAgIHRoaXMubmV3Um9sZVBvbGljeSA9IHsKICAgICAgICBlZmZlY3Q6ICcnLAogICAgICAgIHByaW5jaXBhbHM6IFtdLAogICAgICAgIHJvbGVzOiBbXSwKICAgICAgICByZXNvdXJjZXM6IFtdLAogICAgICAgIGNvbmRpdGlvbjogJycKICAgICAgfTsKICAgICAgdGhpcy5uZXdSb2xlUG9saWN5VmlzaWJsZSA9IGZhbHNlOwogICAgICB0aGlzLm5ld1JvbGVQb2xpY3lQcmluY2lwYWwgPSB7CiAgICAgICAgdHlwZTogJycsCiAgICAgICAgbmFtZTogJycKICAgICAgfTsKICAgICAgdGhpcy5uZXdSb2xlUG9saWN5Um9sZSA9ICcnOwogICAgICB0aGlzLm5ld1JvbGVQb2xpY3lSZXNvdXJjZSA9ICcnOwogICAgfSwKICAgIHJlZnJlc2hQb2xpY2llczogZnVuY3Rpb24gcmVmcmVzaFBvbGljaWVzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuYXhpb3MuZ2V0KCIiLmNvbmNhdCh0aGlzLnBtc0VuZHBvaW50LCAiL3NlcnZpY2UvIikuY29uY2F0KHRoaXMuc3ZjTmFtZSwgIi9wb2xpY3kiKSkudGhlbihmdW5jdGlvbiAocmVzcCkgewogICAgICAgIGNvbnNvbGUubG9nKHJlc3AuZGF0YSk7CiAgICAgICAgX3RoaXMyLnBvbGljaWVzID0gcmVzcC5kYXRhOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgICAgICBfdGhpczIucG9saWNpZXMgPSBbXTsKCiAgICAgICAgX3RoaXMyLiRidlRvYXN0LnRvYXN0KCIiLmNvbmNhdChlcnIubWVzc2FnZSksIHsKICAgICAgICAgIHRpdGxlOiAnRmFpbCB0byBnZXQgcG9saWNpZXMnLAogICAgICAgICAgdmFyaWFudDogJ2RhbmdlcicsCiAgICAgICAgICBzb2xpZDogdHJ1ZQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICByZWZyZXNoUm9sZVBvbGljaWVzOiBmdW5jdGlvbiByZWZyZXNoUm9sZVBvbGljaWVzKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHRoaXMuYXhpb3MuZ2V0KCIiLmNvbmNhdCh0aGlzLnBtc0VuZHBvaW50LCAiL3NlcnZpY2UvIikuY29uY2F0KHRoaXMuc3ZjTmFtZSwgIi9yb2xlLXBvbGljeSIpKS50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcC5kYXRhKTsKICAgICAgICBfdGhpczMucm9sZVBvbGljaWVzID0gcmVzcC5kYXRhOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgICAgICBfdGhpczMucm9sZVBvbGljaWVzID0gW107CgogICAgICAgIF90aGlzMy4kYnZUb2FzdC50b2FzdCgiIi5jb25jYXQoZXJyLm1lc3NhZ2UpLCB7CiAgICAgICAgICB0aXRsZTogJ0ZhaWwgdG8gZ2V0IHJvbGUgcG9saWNpZXMnLAogICAgICAgICAgdmFyaWFudDogJ2RhbmdlcicsCiAgICAgICAgICBzb2xpZDogdHJ1ZQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBhZGRQb2xpY3k6IGZ1bmN0aW9uIGFkZFBvbGljeShwb2xpY3kpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICBjb25zb2xlLmxvZygnYWRkUG9saWN5Jyk7CiAgICAgIHZhciBwcmluY2lwYWxzID0gW107CiAgICAgIHZhciBvckl0ID0gcG9saWN5LnByaW5jaXBhbHMudmFsdWVzKCk7CiAgICAgIHZhciBvckN1ciA9IG9ySXQubmV4dCgpOwoKICAgICAgd2hpbGUgKCFvckN1ci5kb25lKSB7CiAgICAgICAgY29uc29sZS5sb2cob3JDdXIudmFsdWUuYW5kUHJpbmNpcGFsKTsKICAgICAgICB2YXIgYW5kSXQgPSBvckN1ci52YWx1ZS5hbmRQcmluY2lwYWwudmFsdWVzKCk7CiAgICAgICAgdmFyIGFuZEN1ciA9IGFuZEl0Lm5leHQoKTsKICAgICAgICB2YXIgYW5kUCA9IFtdOwoKICAgICAgICB3aGlsZSAoIWFuZEN1ci5kb25lKSB7CiAgICAgICAgICBhbmRQLnB1c2goIiIuY29uY2F0KGFuZEN1ci52YWx1ZS50eXBlLCAiOiIpLmNvbmNhdChhbmRDdXIudmFsdWUubmFtZSkpOwogICAgICAgICAgYW5kQ3VyID0gYW5kSXQubmV4dCgpOwogICAgICAgIH0KCiAgICAgICAgcHJpbmNpcGFscy5wdXNoKGFuZFApOwogICAgICAgIG9yQ3VyID0gb3JJdC5uZXh0KCk7CiAgICAgIH0KCiAgICAgIGNvbnNvbGUubG9nKHByaW5jaXBhbHMpOwogICAgICB2YXIgcGVybXMgPSBbXTsKICAgICAgdmFyIGl0ID0gcG9saWN5LnBlcm1pc3Npb25zLnZhbHVlcygpOwogICAgICB2YXIgY3VyID0gaXQubmV4dCgpOwoKICAgICAgd2hpbGUgKCFjdXIuZG9uZSkgewogICAgICAgIGlmIChjdXIudmFsdWUuaXNSZXNFeHApIHsKICAgICAgICAgIHBlcm1zLnB1c2goewogICAgICAgICAgICBhY3Rpb25zOiBjdXIudmFsdWUuYWN0aW9ucywKICAgICAgICAgICAgcmVzb3VyY2VFeHByZXNzaW9uOiBjdXIudmFsdWUucmVzb3VyY2UKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwZXJtcy5wdXNoKHsKICAgICAgICAgICAgYWN0aW9uczogY3VyLnZhbHVlLmFjdGlvbnMsCiAgICAgICAgICAgIHJlc291cmNlOiBjdXIudmFsdWUucmVzb3VyY2UKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgY3VyID0gaXQubmV4dCgpOwogICAgICB9CgogICAgICB0aGlzLmF4aW9zLnBvc3QoIiIuY29uY2F0KHRoaXMucG1zRW5kcG9pbnQsICIvc2VydmljZS8iKS5jb25jYXQodGhpcy5zdmNOYW1lLCAiL3BvbGljeSIpLCB7CiAgICAgICAgbmFtZTogJ3BvbGljeSBkZXNjJywKICAgICAgICBlZmZlY3Q6IHBvbGljeS5lZmZlY3QsCiAgICAgICAgcHJpbmNpcGFsczogcHJpbmNpcGFscywKICAgICAgICBwZXJtaXNzaW9uczogcGVybXMsCiAgICAgICAgY29uZGl0aW9uOiBwb2xpY3kuY29uZGl0aW9uCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwoKICAgICAgICBfdGhpczQucmVmcmVzaFBvbGljaWVzKCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnIpOwoKICAgICAgICBfdGhpczQuJGJ2VG9hc3QudG9hc3QoIiIuY29uY2F0KGVyci5tZXNzYWdlKSwgewogICAgICAgICAgdGl0bGU6ICdGYWlsIHRvIGNyZWF0ZSBwb2xpY3knLAogICAgICAgICAgdmFyaWFudDogJ2RhbmdlcicsCiAgICAgICAgICBzb2xpZDogdHJ1ZQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICByZW1vdmVQb2xpY3k6IGZ1bmN0aW9uIHJlbW92ZVBvbGljeShpZFRvUmVtb3ZlKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgLy8gdGhpcy5wb2xpY2llcyA9IHRoaXMucG9saWNpZXMuZmlsdGVyKChwb2xpY3kpID0+IHBvbGljeS5pZCAhPT0gaWRUb1JlbW92ZSk7CiAgICAgIHRoaXMuYXhpb3MuZGVsZXRlKCIiLmNvbmNhdCh0aGlzLnBtc0VuZHBvaW50LCAiL3NlcnZpY2UvIikuY29uY2F0KHRoaXMuc3ZjTmFtZSwgIi9wb2xpY3kvIikuY29uY2F0KGlkVG9SZW1vdmUpKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKCiAgICAgICAgX3RoaXM1LnJlZnJlc2hQb2xpY2llcygpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyKTsKCiAgICAgICAgX3RoaXM1LiRidlRvYXN0LnRvYXN0KCIiLmNvbmNhdChlcnIubWVzc2FnZSksIHsKICAgICAgICAgIHRpdGxlOiAnRmFpbCB0byBkZWxldGUgcG9saWN5JywKICAgICAgICAgIHZhcmlhbnQ6ICdkYW5nZXInLAogICAgICAgICAgc29saWQ6IHRydWUKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgYWRkUm9sZVBvbGljeTogZnVuY3Rpb24gYWRkUm9sZVBvbGljeShyb2xlUG9saWN5KSB7CiAgICAgIHZhciBfdGhpczYgPSB0aGlzOwoKICAgICAgY29uc29sZS5sb2coJ2FkZFJvbGVQb2xpY3knKTsKICAgICAgdGhpcy5heGlvcy5wb3N0KCIiLmNvbmNhdCh0aGlzLnBtc0VuZHBvaW50LCAiL3NlcnZpY2UvIikuY29uY2F0KHRoaXMuc3ZjTmFtZSwgIi9yb2xlLXBvbGljeSIpLCB7CiAgICAgICAgbmFtZTogJ3JvbGUgcG9saWN5IGRlc2MnLAogICAgICAgIGVmZmVjdDogcm9sZVBvbGljeS5lZmZlY3QsCiAgICAgICAgcHJpbmNpcGFsczogcm9sZVBvbGljeS5wcmluY2lwYWxzLAogICAgICAgIHJvbGVzOiByb2xlUG9saWN5LnJvbGVzLAogICAgICAgIHJlc291cmNlczogcm9sZVBvbGljeS5yZXNvdXJjZXMsCiAgICAgICAgY29uZGl0aW9uOiByb2xlUG9saWN5LmNvbmRpdGlvbgogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKCiAgICAgICAgX3RoaXM2LnJlZnJlc2hSb2xlUG9saWNpZXMoKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIGNvbnNvbGUubG9nKGVycik7CgogICAgICAgIF90aGlzNi4kYnZUb2FzdC50b2FzdCgiIi5jb25jYXQoZXJyLm1lc3NhZ2UpLCB7CiAgICAgICAgICB0aXRsZTogJ0ZhaWwgdG8gY3JlYXRlIHJvbGUgcG9saWN5JywKICAgICAgICAgIHZhcmlhbnQ6ICdkYW5nZXInLAogICAgICAgICAgc29saWQ6IHRydWUKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgcmVtb3ZlUm9sZVBvbGljeTogZnVuY3Rpb24gcmVtb3ZlUm9sZVBvbGljeShpZFRvUmVtb3ZlKSB7CiAgICAgIHZhciBfdGhpczcgPSB0aGlzOwoKICAgICAgLy8gdGhpcy5wb2xpY2llcyA9IHRoaXMucG9saWNpZXMuZmlsdGVyKChwb2xpY3kpID0+IHBvbGljeS5pZCAhPT0gaWRUb1JlbW92ZSk7CiAgICAgIHRoaXMuYXhpb3MuZGVsZXRlKCIiLmNvbmNhdCh0aGlzLnBtc0VuZHBvaW50LCAiL3NlcnZpY2UvIikuY29uY2F0KHRoaXMuc3ZjTmFtZSwgIi9yb2xlLXBvbGljeS8iKS5jb25jYXQoaWRUb1JlbW92ZSkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwoKICAgICAgICBfdGhpczcucmVmcmVzaFJvbGVQb2xpY2llcygpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyKTsKCiAgICAgICAgX3RoaXM3LiRidlRvYXN0LnRvYXN0KCIiLmNvbmNhdChlcnIubWVzc2FnZSksIHsKICAgICAgICAgIHRpdGxlOiAnRmFpbCB0byBkZWxldGUgcm9sZSBwb2xpY3knLAogICAgICAgICAgdmFyaWFudDogJ2RhbmdlcicsCiAgICAgICAgICBzb2xpZDogdHJ1ZQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyBjb25zdCBzTmFtZSA9IHRoaXMuJHN0b3JlLnN0YXRlLnN2Y05hbWU7CiAgICBpZiAodGhpcy5zdmNOYW1lICE9PSAnJykgewogICAgICB0aGlzLnJlZnJlc2hQb2xpY2llcygpOwogICAgICB0aGlzLnJlZnJlc2hSb2xlUG9saWNpZXMoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Policies.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <b-card  no-body class=\"border-0 rounded-0  vh-100 overflow-auto\">\n  <b-card-header v-if=\"svcName !== ''\" header-bg-variant=\"light\"  class=\"border-left rounded-0\">\n      Service Name: {{svcName}}\n  </b-card-header>\n  <b-card-header v-else header-bg-variant=\"danger\" header-text-variant=\"white\"\n   class=\"border-left rounded-0\">\n      Pls select a service from left nav pane!!!\n  </b-card-header>\n  <!--<b-card-body class=\"border-left m-0 p-0\">-->\n    <b-card no-body  class=\"rounded-0 border-0 border-left\">\n    <b-tabs card>\n      <b-tab title=\"Policies\" active>\n        <b-row>\n          <b-col cols=\"10\">\n            <b-button @click=\"newPolicyVisible = !newPolicyVisible\"\n            pill class=\"mt-3 mb-3\" variant=\"outline-success\" size=\"sm\">\n              <b-icon icon=\"pencil-square\" aria-hidden=\"true\"></b-icon>\n            </b-button>\n            <b-collapse id=\"newPolicy\" v-model=\"newPolicyVisible\">\n              <NewPolicy :policy=\"newPolicy\" :andPrincipal=\"newPolicyAndPrincipal\"\n              :permission=\"newPolicyPermission\" @addPolicy=\"addPolicy\"/>\n            </b-collapse>\n          </b-col>\n          <b-col cols =\"2\">\n            <b-button @click=\"refreshPolicies\"\n             pill class=\"mt-3 mb-3\" variant=\"outline-success\" size=\"sm\">\n              <b-icon icon=\"arrow-repeat\" aria-hidden=\"true\"></b-icon>\n            </b-button>\n          </b-col>\n        </b-row>\n        <b-card>\n          <PolicyTable :policies=\"policies\" @removePolicy=\"removePolicy\"/>\n        </b-card>\n      </b-tab>\n      <b-tab title=\"Role Policies\">\n        <b-row>\n          <b-col cols=\"10\">\n            <b-button @click=\"newRolePolicyVisible = !newRolePolicyVisible\"\n            pill class=\"mt-3 mb-3\" variant=\"outline-success\" size=\"sm\">\n              <b-icon icon=\"pencil-square\" aria-hidden=\"true\"></b-icon>\n            </b-button>\n            <b-collapse id=\"newRolePolicy\" v-model=\"newRolePolicyVisible\">\n              <NewRolePolicy :rolePolicy=\"newRolePolicy\" :principal=\"newRolePolicyPrincipal\"\n                :role=\"newRolePolicyRole\" :resource=\"newRolePolicyResource\"\n                @addRolePolicy=\"addRolePolicy\"/>\n            </b-collapse>\n            </b-col>\n          <b-col cols =\"2\">\n            <b-button @click=\"refreshRolePolicies\"\n             pill class=\"mt-3 mb-3\" variant=\"outline-success\" size=\"sm\">\n              <b-icon icon=\"arrow-repeat\" aria-hidden=\"true\"></b-icon>\n            </b-button>\n          </b-col>\n        </b-row>\n        <b-card>\n          <RolePolicyTable :rolePolicies=\"rolePolicies\" @removeRolePolicy=\"removeRolePolicy\"/>\n        </b-card>\n      </b-tab>\n    </b-tabs>\n    </b-card>\n    <!--</b-card-body>-->\n  </b-card>\n</template>\n\n<script>\nimport NewPolicy from './NewPolicy.vue';\nimport PolicyTable from './PolicyTable.vue';\nimport NewRolePolicy from './NewRolePolicy.vue';\nimport RolePolicyTable from './RolePolicyTable.vue';\n\n// let nextID = 3;\nexport default {\n  name: 'Policies',\n  components: {\n    NewPolicy, PolicyTable, NewRolePolicy, RolePolicyTable,\n  },\n  data() {\n    return {\n      policies: [],\n      rolePolicies: [],\n      newPolicy: {\n        effect: '',\n        principals: [],\n        permissions: [],\n        condition: '',\n      },\n      newPolicyAndPrincipal: [{\n        id: 0,\n        type: '',\n        name: '',\n      }],\n      newPolicyPermission: {\n        action: '',\n        resource: '',\n      },\n      newPolicyVisible: false,\n\n      newRolePolicy: {\n        effect: '',\n        principals: [],\n        roles: [],\n        resources: [],\n        condition: '',\n      },\n      newRolePolicyVisible: false,\n      newRolePolicyPrincipal: {\n        type: '',\n        name: '',\n      },\n      newRolePolicyRole: '',\n      newRolePolicyResource: '',\n    };\n  },\n  computed: {\n    svcName() {\n      return this.$store.state.svcName;\n    },\n    pmsEndpoint() {\n      return this.$store.state.pmsEndpoint;\n    },\n  },\n  watch: {\n    svcName(newVal) {\n      if (newVal !== '') {\n        this.resetNewPolicyData();\n        this.axios.get(`${this.pmsEndpoint}/service/${newVal}/policy`).then((response) => {\n          console.log(response.data);\n          this.policies = response.data;\n        }).catch((err) => {\n          console.log(err);\n          console.log(err.response.data);\n          console.log(err.response.status);\n          this.policies = [];\n          this.$bvToast.toast('Fail to get policies', {\n            title: `${err.response.status}`,\n            variant: 'danger',\n            solid: true,\n          });\n        });\n        this.axios.get(`${this.pmsEndpoint}/service/${newVal}/role-policy`).then((response) => {\n          console.log(response.data);\n          this.rolePolicies = response.data;\n        }).catch((err) => {\n          console.log(err);\n          console.log(err.response.data);\n          console.log(err.response.status);\n          this.rolePolicies = [];\n          this.$bvToast.toast('Fail to get role policies', {\n            title: `${err.response.status}`,\n            variant: 'danger',\n            solid: true,\n          });\n        });\n      } else {\n        this.policies = [];\n        this.rolePolicies = [];\n      }\n    },\n  },\n  methods: {\n    resetNewPolicyData() {\n      this.newPolicy = {\n        effect: '',\n        principals: [],\n        permissions: [],\n        condition: '',\n      };\n      this.newPolicyPrincipal = [{\n        id: 0,\n        type: '',\n        name: '',\n      }];\n      this.newPolicyPermission = { action: '', resource: '', isResExp: false };\n      this.newPolicyVisible = false;\n\n      this.newRolePolicy = {\n        effect: '',\n        principals: [],\n        roles: [],\n        resources: [],\n        condition: '',\n      };\n      this.newRolePolicyVisible = false;\n      this.newRolePolicyPrincipal = {\n        type: '',\n        name: '',\n      };\n      this.newRolePolicyRole = '';\n      this.newRolePolicyResource = '';\n    },\n    refreshPolicies() {\n      this.axios.get(`${this.pmsEndpoint}/service/${this.svcName}/policy`).then((resp) => {\n        console.log(resp.data);\n        this.policies = resp.data;\n      }).catch((err) => {\n        console.log(err);\n        this.policies = [];\n        this.$bvToast.toast(`${err.message}`, {\n          title: 'Fail to get policies',\n          variant: 'danger',\n          solid: true,\n        });\n      });\n    },\n    refreshRolePolicies() {\n      this.axios.get(`${this.pmsEndpoint}/service/${this.svcName}/role-policy`).then((resp) => {\n        console.log(resp.data);\n        this.rolePolicies = resp.data;\n      }).catch((err) => {\n        console.log(err);\n        this.rolePolicies = [];\n        this.$bvToast.toast(`${err.message}`, {\n          title: 'Fail to get role policies',\n          variant: 'danger',\n          solid: true,\n        });\n      });\n    },\n    addPolicy(policy) {\n      console.log('addPolicy');\n      const principals = [];\n      const orIt = policy.principals.values();\n      let orCur = orIt.next();\n      while (!orCur.done) {\n        console.log(orCur.value.andPrincipal);\n        const andIt = orCur.value.andPrincipal.values();\n        let andCur = andIt.next();\n        const andP = [];\n        while (!andCur.done) {\n          andP.push(`${andCur.value.type}:${andCur.value.name}`);\n          andCur = andIt.next();\n        }\n        principals.push(andP);\n        orCur = orIt.next();\n      }\n      console.log(principals);\n      const perms = [];\n      const it = policy.permissions.values();\n      let cur = it.next();\n      while (!cur.done) {\n        if (cur.value.isResExp) {\n          perms.push({ actions: cur.value.actions, resourceExpression: cur.value.resource });\n        } else {\n          perms.push({ actions: cur.value.actions, resource: cur.value.resource });\n        }\n        cur = it.next();\n      }\n\n      this.axios.post(`${this.pmsEndpoint}/service/${this.svcName}/policy`,\n        {\n          name: 'policy desc',\n          effect: policy.effect,\n          principals,\n          permissions: perms,\n          condition: policy.condition,\n        }).then((response) => {\n        console.log(response);\n        this.refreshPolicies();\n      }).catch((err) => {\n        console.log(err);\n        this.$bvToast.toast(`${err.message}`, {\n          title: 'Fail to create policy',\n          variant: 'danger',\n          solid: true,\n        });\n      });\n    },\n    removePolicy(idToRemove) {\n      // this.policies = this.policies.filter((policy) => policy.id !== idToRemove);\n      this.axios.delete(`${this.pmsEndpoint}/service/${this.svcName}/policy/${idToRemove}`)\n        .then((response) => {\n          console.log(response);\n          this.refreshPolicies();\n        }).catch((err) => {\n          console.log(err);\n          this.$bvToast.toast(`${err.message}`, {\n            title: 'Fail to delete policy',\n            variant: 'danger',\n            solid: true,\n          });\n        });\n    },\n    addRolePolicy(rolePolicy) {\n      console.log('addRolePolicy');\n      this.axios.post(`${this.pmsEndpoint}/service/${this.svcName}/role-policy`,\n        {\n          name: 'role policy desc',\n          effect: rolePolicy.effect,\n          principals: rolePolicy.principals,\n          roles: rolePolicy.roles,\n          resources: rolePolicy.resources,\n          condition: rolePolicy.condition,\n        }).then((response) => {\n        console.log(response);\n        this.refreshRolePolicies();\n      }).catch((err) => {\n        console.log(err);\n        this.$bvToast.toast(`${err.message}`, {\n          title: 'Fail to create role policy',\n          variant: 'danger',\n          solid: true,\n        });\n      });\n    },\n    removeRolePolicy(idToRemove) {\n      // this.policies = this.policies.filter((policy) => policy.id !== idToRemove);\n      this.axios.delete(`${this.pmsEndpoint}/service/${this.svcName}/role-policy/${idToRemove}`)\n        .then((response) => {\n          console.log(response);\n          this.refreshRolePolicies();\n        }).catch((err) => {\n          console.log(err);\n          this.$bvToast.toast(`${err.message}`, {\n            title: 'Fail to delete role policy',\n            variant: 'danger',\n            solid: true,\n          });\n        });\n    },\n  },\n  mounted() {\n    // const sName = this.$store.state.svcName;\n    if (this.svcName !== '') {\n      this.refreshPolicies();\n      this.refreshRolePolicies();\n    }\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}